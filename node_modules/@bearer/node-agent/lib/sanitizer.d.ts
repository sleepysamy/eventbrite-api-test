export declare class Sanitizer {
    private globalKeyPattern?;
    private ruleKeyPattern?;
    private globalValuePattern?;
    private ruleValuePattern?;
    private filtered;
    constructor({ globalKeyPattern, ruleKeyPattern, globalValuePattern, ruleValuePattern, filtered }: SanitizerParams);
    sanitize(value: any): any;
    sanitizeUrlPath(path: string): string;
    private sanitizeObject;
    private sanitizeArray;
    private keyIsSanitized;
    private sanitizeString;
}
export interface GlobalSanitizerParams {
    globalKeyPattern?: RegExp;
    globalValuePattern?: RegExp;
    filtered: string[];
}
interface SanitizerParams extends GlobalSanitizerParams {
    ruleKeyPattern?: RegExp;
    ruleValuePattern?: RegExp;
}
export {};
