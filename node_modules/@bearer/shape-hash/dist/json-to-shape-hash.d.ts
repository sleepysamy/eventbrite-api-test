declare type Json = string | Json[] | number | boolean | JsonObject | null;
declare type JsonObject = {
    [key: string]: Json;
};
declare type Field = {
    key: string;
    hash: ShapeHashReturn;
};
declare type ShapeHashReturn = {
    type: PrimitiveTypes;
    fields: Field[];
    items: ShapeHashReturn[];
    rules: any[];
};
export declare function jsonToShapeHash(_data: Json, options?: {
    strict: boolean;
}): ShapeHashReturn;
export declare function toHash(json: Json, options?: {
    strict: boolean;
}): string;
export declare function toSha(json: Json, options?: {
    strict: boolean;
}): any;
declare const enum PrimitiveTypes {
    OBJECT = 0,
    ARRAY = 1,
    STRING = 2,
    NUMBER = 3,
    BOOLEAN = 4,
    NULL = 5
}
export {};
